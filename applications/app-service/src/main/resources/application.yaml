server:
  port: 8080
spring:
  application:
    name: "api-loan-request"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  springdoc:
    swagger-ui:
      path: "/docs"
    api-docs:
      path: "/api-docs"
  r2dbc:
   # host: "postgres"
   # port: 5432
    #username: "loan_user"
   # password: 123456789
    #database: "loan_system"
    #schema: "loan_schema"
    host: "postgres"
    port: 5432
    username: "auth_user"
    password: pass12345
    database: "authentication_db"
    schema: "loan_schema"
  profiles:
    include: null
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
adapter:
  restconsumer:
    timeout: 5000
    url: "http://autenticacion:8090"
    endpoints:
      exists-user: "/api/users/{identification}"
  sqs:
    region: "us-east-2"
    queueUrl: "https://sqs.us-east-2.amazonaws.com/914556844943/requests-credit-queue"
    #endpoint: "http://localhost:4566"
  aws:
    aws:
    
    accessKey: ${AWS_ACCESS_KEY_ID}
    secretKey: ${AWS_SECRET_ACCESS_KEY}

resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
